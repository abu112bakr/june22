class KeyIndex:
  def __init__(self,A):
    self.A=A
    
    max,min=self.max_min()
    #print(max) #works
    #print(min) #works
    self.k=[0]*(max+abs(min)+1)          #modulus(min) i.e abs(min), k is aux array
    print(k)
    #self.k=k
    i=0
    while(i<len(self.A)):

      self.k[self.A[i]+abs(min)] = self.k[self.A[i]+abs(min)]+1
      i+=1
    print(self.k)
    pass
  def max_min(self):
    a=self.A
    max=a[0]
    min=a[0]
    for i in range(len(a)):
      if a[i]>=max:
        max=a[i]
      if a[i]<=min:
        min=a[i]

    return max,min
  def search(self,val):
    #This method searches for the value val within the array and returns true if found or false otherwise.
    max,min=self.max_min()
    aug_index= val+ abs(min)
    if aug_index<0 or aug_index>(len(self.k)-1):
      return False
    if self.k[aug_index]>0:
      return True
    else:
      return False

    pass

  def print(self):
    x=self.max_min()
    print(x)
x=[0,1,2,3,4,5,6,7,8,9,10,11]
print(x)
a1=[4,-1,3,-4,7,4]
h1= KeyIndex(a1)
#h1.print()


